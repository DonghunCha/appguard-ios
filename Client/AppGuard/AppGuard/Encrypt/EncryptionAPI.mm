//
//  EncryptionAPI.cpp
//  AppGuard
//
//  Created by NHNEnt on 11/07/2019.
//  Copyright Â© 2019 nhnent. All rights reserved.
//

#include "EncryptionAPI.hpp"


const unsigned char EncryptionAPI::rsaPublicKey_[162] = { 0x30, 0x81, 0x9F, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8D, 0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xC6, 0xFC, 0xA6, 0x1C, 0xFD, 0x48, 0xE5, 0x09, 0x20, 0x3C, 0xCB, 0x53, 0xD0, 0xA9, 0x9D, 0x80, 0x37, 0x74, 0x32, 0x15, 0xDE, 0x14, 0xA5, 0x5B, 0xC7, 0x89, 0xB1, 0x0D, 0x74, 0x82, 0xC2, 0x7A, 0x0C, 0xB8, 0x0B, 0x88, 0xFB, 0x90, 0xE5, 0x0E, 0xB1, 0xE4, 0x7B, 0xC2, 0xE2, 0x5F, 0xA8, 0x54, 0xAB, 0xA8, 0x60, 0x06, 0x92, 0xC4, 0xBC, 0x8A, 0xEA, 0x1A, 0xE3, 0x72, 0x64, 0xF2, 0xCB, 0x44, 0x57, 0xDB, 0xE3, 0x92, 0x83, 0x82, 0x8E, 0x87, 0x76, 0x18, 0x7F, 0x25, 0x6C, 0x55, 0x75, 0x10, 0x0F, 0x9C, 0x9A, 0x07, 0x56, 0x8C, 0x51, 0xA9, 0xF5, 0xF0, 0x7E, 0xEB, 0x1D, 0xC0, 0x9F, 0xC4, 0x30, 0x05, 0x4D, 0x6C, 0xC0, 0xB8, 0x84, 0xA2, 0xE2, 0x47, 0xFF, 0xD3, 0x1B, 0xE7, 0xCD, 0x02, 0x9A, 0xB7, 0x80, 0x76, 0xB0, 0x19, 0x51, 0xF2, 0x12, 0xED, 0x4A, 0xE4, 0xA1, 0x05, 0x5F, 0xE3, 0x02, 0x03, 0x01, 0x00, 0x01 };


__attribute__((visibility("hidden"))) EncryptionAPI::EncryptionAPI()
{
    
}

__attribute__((visibility("hidden"))) EncryptionAPI::~EncryptionAPI()
{

}


__attribute__((visibility("hidden"))) int EncryptionAPI::checkExcuteAppGuard()
{
    AGLog(@"flag A - [%d], B - [%d], C - [%d], D - [%d]", flagA_, flagB_, flagC_, flagD_);
    return flagA_ * flagB_ * flagC_ * flagD_;
}

__attribute__((visibility("hidden"))) void EncryptionAPI::setEncFlagA()
{
    flagA_ = 1;
}

__attribute__((visibility("hidden"))) void EncryptionAPI::setEncFlagB()
{
    flagB_ = 1;
}

__attribute__((visibility("hidden"))) void EncryptionAPI::setEncFlagC()
{
    flagC_ = 1;
}

__attribute__((visibility("hidden"))) void EncryptionAPI::setEncFlagD()
{
    flagD_ = 1;
}

